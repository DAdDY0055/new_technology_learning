AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sample API Gateway Lambda Authorizer by Golang.
Resources:
  SampleRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Description: This is Sample Rest API
      Cors:
        AllowMethods: '''GET, OPTIONS'''
        AllowHeaders: '''*'''
        AllowOrigin: '''*'''
      Auth:
        DefaultAuthorizer: MyLambdaAuthorizerFunction
        Authorizers:
          MyLambdaAuthorizerFunction:
            FunctionArn:
              Fn::GetAtt:
              - LambdaAuthorizerFunction
              - Arn
  RootFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId:
              Ref: SampleRestApi
      Runtime: python3.7
      Handler: index.handler
      InlineCode: "def handler(event, context):\n    return {\n    'statusCode': 200,\n\
        \      'headers': {\n          'Access-Control-Allow-Headers': 'Content-Type',\n\
        \          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods':\
        \ 'OPTIONS,POST,GET'\n      }\n    }\n"
  AdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /admin
            Method: get
            RestApiId:
              Ref: SampleRestApi
      Runtime: python3.7
      Handler: index.handler
      InlineCode: "import json\ndef handler(event, context):\n    return {\n    'statusCode':\
        \ 200,\n      'headers': {\n          'Access-Control-Allow-Headers': 'Content-Type',\n\
        \          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods':\
        \ 'OPTIONS,POST,GET'\n      },\n    'body': json.dumps({\n      'message':\
        \ 'admin\u60C5\u5831',\n    }),\n  }\n"
  LeaderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /leaders
            Method: get
            RestApiId:
              Ref: SampleRestApi
      Runtime: python3.7
      Handler: index.handler
      InlineCode: "import json\ndef handler(event, context):\n    return {\n    'statusCode':\
        \ 200,\n    'headers': {\n          'Access-Control-Allow-Headers': 'Content-Type',\n\
        \        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods':\
        \ 'OPTIONS,POST,GET'\n    },\n    'body': json.dumps({\n      'message': 'leader\u60C5\
        \u5831',\n    }),\n  }\n"
  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /users/8eMzOlFSDcVJU8U4zjwNA9pyMlr1
            Method: get
            RestApiId:
              Ref: SampleRestApi
      Runtime: python3.7
      Handler: index.handler
      InlineCode: "import json\ndef handler(event, context):\n    return {\n    'statusCode':\
        \ 200,\n      'headers': {\n          'Access-Control-Allow-Headers': 'Content-Type',\n\
        \          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods':\
        \ 'OPTIONS,POST,GET'\n      },\n      'body': json.dumps({\n        'message':\
        \ 'user\u60C5\u5831',\n      }),\n    }\n"
  LambdaAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: samAuth
      CodeUri: LambdaAuthorizerFunction
      Handler: app.lambda_handler
      Runtime: go1.x
Outputs:
  SampleRestApi:
    Description: Sample API Gateway Lambda Authorizer by Golang.
    Value:
      Fn::Sub: https://${SampleRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/
